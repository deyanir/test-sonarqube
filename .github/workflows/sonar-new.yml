name: .NET Build and SonarQube Analysis

on:
  workflow_dispatch:

jobs:
  build-and-analyze:
    runs-on: windows-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Setup .NET SDK
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0'

      # Step 3: Install SonarScanner for .NET
      - name: Install SonarScanner for .NET
        run: |
          dotnet tool install --global dotnet-sonarscanner
      # Step 4: Start SonarQube Analysis (Begin Step)
      - name: Begin SonarQube Analysis
        run: |
          dotnet sonarscanner begin `
            /k:"sonar-dotnet-scan" `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.host.url="${{ secrets.SONAR_URL }}" `
            /o:"sonar-ad111" `
            /d:sonar.projectBaseDir="$(Get-Location)\\MyDotnetApp\\MyDotnetApp.csproj" `
      # Step 5: Build the Project
      - name: Build the Project
        run: |
          dotnet build MyDotnetApp/MyDotnetApp.csproj
      # Step 6: End SonarQube Analysis
      - name: End SonarQube Analysis
        run: |
          dotnet sonarscanner end `
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" `
            
            
      - name: Install dotnet-coverage tool
        shell: powershell
        run: |
            dotnet tool install --global dotnet-coverage

      - name: Run tests and collect code coverage
        shell: powershell
        run: |
             dotnet-coverage collect 'dotnet test --no-restore --nologo' -f xml --output "coverage.xml"

      - name: Prepare Coverage Report for SonarQube
        shell: powershell
        run: |
          # Use the Visual Studio Coverage XML format and set the property for SonarQube
            echo "sonar.cs.vscoveragexml.reportsPaths=coverage.xml" >> $GITHUB_ENV
